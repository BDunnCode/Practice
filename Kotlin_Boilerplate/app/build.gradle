import org.jlleitschuh.gradle.ktlint.reporter.ReporterType
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'org.jlleitschuh.gradle.ktlint'
    id "io.gitlab.arturbosch.detekt" version "1.19.0"
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.tc2r1.android.nudennie_white_boilerplate"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kapt {
        correctErrorTypes = true
    }

    kotlinOptions {
        allWarningsAsErrors = true
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    buildFeatures {
        dataBinding true
    }

    lint {
        // if true, stop the gradle build if errors are found
        abortOnError false
        // set to true to have all release builds run lint on issues with severity=fatal
        // and abort the build (controlled by abortOnError above) if fatal issues are found
        checkReleaseBuilds true
        // if true, only report errors
        ignoreWarnings false
        // if true, emit full/absolute paths to files with errors (true by default)
        //absolutePaths true
        // Disables parsing of test cases to increase performance.
        ignoreTestSources true
        // if true, check all issues, including those that are off by default // performance issue
        checkAllWarnings false
        // if true, treat all warnings as errors
        warningsAsErrors true
        // turn off checking the given issue id's
        disable 'TypographyFractions','TypographyQuotes','GradleDynamicVersion'
        // turn on the given issue id's
        enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
        // if true, don't include source code lines in the error output
        noLines false
        // if true, show all locations for an error, do not truncate lists, etc.
        showAll true
        // whether lint should include full issue explanations in the text error output
        explainIssues false
        warning 'UnusedResources','Typos'
        // if true, generate a text report of issues (false by default)
        textReport true
        // location to write the output; can be a file or 'stdout' or 'stderr'
        //textOutput 'stdout'
        textOutput file("lint-results.txt")
        // if true, generate an XML report for use by for example Jenkins
        xmlReport true
        // file to write report to (if not specified, defaults to lint-results.xml)
        xmlOutput file("lint-report.xml")
        // if true, generate an HTML report (with issue explanations, sourcecode, etc)
        htmlReport true
        // optional path to report (default will be lint-results.html in the builddir)
        htmlOutput file("lint-report.html")
        // Use (or create) a baseline file for issues that should not be reported
        // baseline file("lint-baseline.xml")
    }
}



// https://detekt.github.io/detekt/gradle.html
detekt{
    allRules = true
    debug = true
    // Builds the AST in parallel. Rules are always executed in parallel.
    // Can lead to speedups in larger projects. `false` by default.
    parallel = true

    reporter {}
        // Enable/Disable XML report (default: true)
        xml.required.set(true)
        xml.outputLocation.set(file("build/reports/detekt.xml"))

        // Enable/Disable HTML report (default: true)
        html.required.set(true)
        html.outputLocation.set(file("build/reports/detekt.html"))

}

//// https://github.com/Jlleitschuh/ktlint-gradle#configuration
ktlint {
    reporters {
        debug = true
        verbose = true
        android = false
        outputToConsole = true
        outputColorName = "RED"
        ignoreFailures = true
        enableExperimentalRules = true
        disabledRules = ["final-newline", "experimental:package-name", "no-wildcard-imports"]
        // baseline = file("my-project-ktlint-baseline.xml")
        //        reporter(ReporterType.CHECKSTYLE)
        reporter(ReporterType.HTML)
        reporter(ReporterType.PLAIN_GROUP_BY_FILE)
    }
    filter {
        exclude("**/generated/**")
        include("**/kotlin/**")
    }
}

// HTTPS://docs.gradle.org/current/userguide/jacoco_plugin.html

dependencies {
// Core
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'

    // Android x Layout
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation "androidx.fragment:fragment-ktx:1.4.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // DESUGARING
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    // Kotlin And LifeCycles
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // Material Design
    implementation "com.google.android.material:material:1.4.0"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}